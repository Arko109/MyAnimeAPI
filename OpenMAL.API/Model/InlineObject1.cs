/*
 * MyAnimeList API (beta ver.)
 *
 * MyAnimeList.net is the property of MyAnimeList, LLC. ©2019 All Rights Reserved.  ## Versioning  There are multiple versions of the API. You can specify a version by including it in the request uri:  (During closed beta, version starts with '0.')  `https://api.myanimelist.net/v2`  The version is incremented if any backwards incompatible changes are introduced to the API.  Examples of backwards incompatible changes are belows:  - Removing existing endpoints. - Removing existing fields of API responses. - Changing mean of the existing fields.  On the other hand, belows are examples of backwards compatible changes:  - Adding new endpoints. - Adding new optional request parameters. - Adding new fields to existing API responses. - Changing the order of fields in existing API responses. - Changing the contents of fields that suffixed by `_formatted`.   ## Common formats  ### List / Pagination  ```json {   \"data\": [     {...},     {...},     ...   ],   \"paging\": {     \"previous\": \"https://xxx\",     \"next\": \"https://xxx\"   } } ```      ### Date / Time format  <table> <tr> <th>Format <th>Type <th>Sample <th>Description </tr>  <tr> <td>date-time <td>string <td>\"2015-03-02T06:03:11+00:00\"  <td>ISO 8601 </tr>      <tr> <td>date <td>string <td>\"2017-10-23\" or <br>\"2017-10\" or <br>\"2017\" <td> </tr>  <tr> <td>time <td>string <td>\"01:35\" <td> </tr>  </table>  ### Error format   ```json {   \"error\": \"invalid_token\"   \"message\": \"token is invalid\", } ```  ## Common parameters  ### Parameters for endpoints that return a list  | Name | Description | | - -- | - -- | | limit |  | | offset |  |  ### Choosing fields  By default, the API doesn’t return all fields.  You can choose the fields that you want returned with the `fields` parameter.  Example:  ``` fields=synopsis,my_list_status{priority,comments} ```  ### Not Safe For Work  By default, some APIs don’t return nsfw content.  You can control this behavior with the `nsfw` parameter.  | Name | Description | | - -- | - -- | | nsfw | `true` or `false` |   ## Common status codes  | Status code | Error code | Description | | - -- - | - -- - | - -- - | | 400 Bad Request | - | Invalid Parameters | | 401 Unauthorized | invalid_token | Expired access tokens, Invalid access tokens, etc. | | 403 Forbidden | - | DoS detected etc. | | 404 Not Found | - | |  # Authentication  <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using Newtonsoft.Json;
using System;
using System.Runtime.Serialization;
using System.Text;

namespace OpenMAL.API.Model
{
    /// <summary>
    /// InlineObject1
    /// </summary>
    [DataContract]
    public partial class InlineObject1 : IEquatable<InlineObject1>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineObject1"/> class.
        /// </summary>
        /// <param name="status">- reading - completed - on_hold - dropped - plan_to_read .</param>
        /// <param name="isRereading">isRereading.</param>
        /// <param name="score">0-10.</param>
        /// <param name="numVolumesRead">numVolumesRead.</param>
        /// <param name="numChaptersRead">numChaptersRead.</param>
        /// <param name="priority">0-2 .</param>
        /// <param name="numTimesReread">numTimesReread.</param>
        /// <param name="rereadValue">0-5 .</param>
        /// <param name="tags">tags.</param>
        /// <param name="comments">comments.</param>
        public InlineObject1(string status = default(string), bool isRereading = default(bool), int score = default(int), int numVolumesRead = default(int), int numChaptersRead = default(int), int priority = default(int), int numTimesReread = default(int), int rereadValue = default(int), string tags = default(string), string comments = default(string))
        {
            this.Status = status;
            this.IsRereading = isRereading;
            this.Score = score;
            this.NumVolumesRead = numVolumesRead;
            this.NumChaptersRead = numChaptersRead;
            this.Priority = priority;
            this.NumTimesReread = numTimesReread;
            this.RereadValue = rereadValue;
            this.Tags = tags;
            this.Comments = comments;
        }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name = "comments", EmitDefaultValue = false)]
        public string Comments { get; set; }
        /// <summary>
        /// Gets or Sets IsRereading
        /// </summary>
        [DataMember(Name = "is_rereading", EmitDefaultValue = false)]
        public bool IsRereading { get; set; }
        /// <summary>
        /// Gets or Sets NumChaptersRead
        /// </summary>
        [DataMember(Name = "num_chapters_read", EmitDefaultValue = false)]
        public int NumChaptersRead { get; set; }
        /// <summary>
        /// Gets or Sets NumTimesReread
        /// </summary>
        [DataMember(Name = "num_times_reread", EmitDefaultValue = false)]
        public int NumTimesReread { get; set; }
        /// <summary>
        /// Gets or Sets NumVolumesRead
        /// </summary>
        [DataMember(Name = "num_volumes_read", EmitDefaultValue = false)]
        public int NumVolumesRead { get; set; }
        /// <summary>
        /// 0-2
        /// </summary>
        /// <value>0-2</value>
        [DataMember(Name = "priority", EmitDefaultValue = false)]
        public int Priority { get; set; }
        /// <summary>
        /// 0-5
        /// </summary>
        /// <value>0-5</value>
        [DataMember(Name = "reread_value", EmitDefaultValue = false)]
        public int RereadValue { get; set; }
        /// <summary>
        /// 0-10
        /// </summary>
        /// <value>0-10</value>
        [DataMember(Name = "score", EmitDefaultValue = false)]
        public int Score { get; set; }
        /// <summary>
        /// - reading - completed - on_hold - dropped - plan_to_read
        /// </summary>
        /// <value>- reading - completed - on_hold - dropped - plan_to_read</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }
        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name = "tags", EmitDefaultValue = false)]
        public string Tags { get; set; }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineObject1);
        }

        /// <summary>
        /// Returns true if InlineObject1 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineObject1 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineObject1 input)
        {
            if (input == null)
                return false;

            return
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) &&
                (
                    this.IsRereading == input.IsRereading ||
                    this.IsRereading.Equals(input.IsRereading)
                ) &&
                (
                    this.Score == input.Score ||
                    this.Score.Equals(input.Score)
                ) &&
                (
                    this.NumVolumesRead == input.NumVolumesRead ||
                    this.NumVolumesRead.Equals(input.NumVolumesRead)
                ) &&
                (
                    this.NumChaptersRead == input.NumChaptersRead ||
                    this.NumChaptersRead.Equals(input.NumChaptersRead)
                ) &&
                (
                    this.Priority == input.Priority ||
                    this.Priority.Equals(input.Priority)
                ) &&
                (
                    this.NumTimesReread == input.NumTimesReread ||
                    this.NumTimesReread.Equals(input.NumTimesReread)
                ) &&
                (
                    this.RereadValue == input.RereadValue ||
                    this.RereadValue.Equals(input.RereadValue)
                ) &&
                (
                    this.Tags == input.Tags ||
                    (this.Tags != null &&
                    this.Tags.Equals(input.Tags))
                ) &&
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                hashCode = hashCode * 59 + this.IsRereading.GetHashCode();
                hashCode = hashCode * 59 + this.Score.GetHashCode();
                hashCode = hashCode * 59 + this.NumVolumesRead.GetHashCode();
                hashCode = hashCode * 59 + this.NumChaptersRead.GetHashCode();
                hashCode = hashCode * 59 + this.Priority.GetHashCode();
                hashCode = hashCode * 59 + this.NumTimesReread.GetHashCode();
                hashCode = hashCode * 59 + this.RereadValue.GetHashCode();
                if (this.Tags != null)
                    hashCode = hashCode * 59 + this.Tags.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineObject1 {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  IsRereading: ").Append(IsRereading).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  NumVolumesRead: ").Append(NumVolumesRead).Append("\n");
            sb.Append("  NumChaptersRead: ").Append(NumChaptersRead).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  NumTimesReread: ").Append(NumTimesReread).Append("\n");
            sb.Append("  RereadValue: ").Append(RereadValue).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }
}